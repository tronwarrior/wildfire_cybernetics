<div id="colOne">
  <h1>Design for Change, Adaptability and Simplicity</h1>
  <p>
    <blockquote>
      <i>
        "Fools ignore complexity. Pragmatists suffer it. Some can avoid it.
        Geniuses remove it."<br />
        <a href="http://en.wikipedia.org/wiki/Alan_Perlis" target="new">
          Alan J Perlis
        </a>
      </i>
    </blockquote>
  </p>

  <h2>Architecture</h2>
  <p>
    Software architecture can be defined as the structure of the components that
    comprise a software system. All software has an architecture, whether that
    architecture was intentional or not. Systems that have been cobbled together
    with little consideration for structure or design still have an
    architecture, even if it's completely ad hoc. 
  </p>

  <h3>Complexity</h3>
  <p>
    Software has always been, by its very nature, complex. Measuring a software
    architecture for complexity up front and early can be a return on investment
    by eliminating potential problems before detailed design and implementation.
    The cost to fix errors in design is greatly increased once creation has
    begun.
  </p>
  <p>
    Software complexity can be defined as having elements of both algorithmic 
    and human psychological complexity. Developments in Object-Oriented (OO)
    architectures during the 1980's and 1990's only served to increase the
    complexity factor several fold. Most recent design metrics studies have been
    focused nearly exclusively on OO. Identifying and correcting unnecessary
    complexity in architectural and detailed design, prior to implementation and 
    construction can increase quality levels up front.
  </p>

  <h3>Hallucination</h3>
  <p>

  </p>
 
  <h2>Design</h2>
  <p>

  </p>

</div>

<div id="colTwo">
  <h3>Self Evident</h3>
    <ul>
      <li><a href="http://www.google.com" target="new">simplicity</a></li>
      <li><a href="http://www.yahoo.com" target="new">complexity</a></li>
    </ul>
</div>

<div style="clear: both;">&nbsp;</div>